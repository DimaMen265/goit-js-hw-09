{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAEhCI,EAAgB,SAACC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,KAIPR,EAAKiB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,SAASlB,EAAMmB,OAC5BC,EAAYF,SAASjB,EAAKkB,OAC1BE,EAAcH,SAAShB,EAAOiB,OAE3BG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EAAG,CAIvCnB,EAHiBmB,EAAI,EACAL,EAAaK,EAAIF,GAGrCG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALX,MACjBlB,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAU0B,EAAKN,EAALX,MAClBlB,EAAA+B,OAAOK,QAAQ,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M,IAI9DjC,EAAKmC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      };\n    }, delay);\n  });\n};\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const delayValue = parseInt(delay.value);\n  const stepValue = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  for (let i = 0; i < amountValue; i += 1) {\n    const position = i + 1;\n    const currentDelay = delayValue + i * stepValue;\n\n    createPromise(position, currentDelay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  };\n\n  form.reset();\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","delayValue","parseInt","value","stepValue","amountValue","i","then","param","delay2","Notify","success","concat","catch","delay3","failure","reset"],"version":3,"file":"03-promises.d48cb9d7.js.map"}